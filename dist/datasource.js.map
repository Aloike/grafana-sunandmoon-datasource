{"version":3,"sources":["../src/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\nimport SunCalc from \"./suncalc\";\n\nexport class SunAndMoonDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n\n    // Datasource configuration\n    this.position = instanceSettings.jsonData.position;\n\n    // Configure available metrics\n    var _p = this;\n    this.metrics = {\n      moon_illumination: {\n        text: \"Moon illumination\",\n        calc: function(time) {\n                return SunCalc.getMoonIllumination(time).fraction;\n              },\n        values: []\n      },\n      moon_altitude: {\n        text: \"Moon altitude\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_azimuth: {\n        text: \"Moon azimuth\",\n        calc: function(time) {\n          return _p.cachedMoonPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      },\n      moon_distance: {\n        text: \"Moon distance\",\n        calc: function(time) { return _p.cachedMoonPosition(time).distance; },\n        values: []\n      },\n      sun_altitude: {\n        text: \"Sun altitude\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).altitude * 180 / Math.PI;\n        },\n        values: []\n      },\n      sun_azimuth: {\n        text: \"Sun azimuth\",\n        calc: function(time) {\n          return _p.cachedSunPosition(time).azimuth * 180 / Math.PI;\n        },\n        values: []\n      }\n    };\n  }\n\n  // Cache values\n  cachedMoonPosition(time) {\n    if (!this.moonPosition)\n      this.moonPosition = SunCalc.getMoonPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.moonPosition;\n  }\n  cachedSunPosition(time) {\n    if (!this.sunPosition)\n      this.sunPosition = SunCalc.getPosition(\n          time, this.position.latitude, this.position.longitude);\n    return this.sunPosition;\n  }\n  cleanCachedPositions() {\n    this.moonPosition = null;\n    this.sunPosition = null;\n  }\n\n  query(options) {\n    var from = options.range.from.valueOf();\n    var to = options.range.to.valueOf();\n    var maxDataPoints = options.maxDataPoints;\n    var stepInSeconds = (to - from) / maxDataPoints;\n\n    var targets = _.map(options.targets, function(i) { return i.target; });\n\n    // Result map\n    var series = _.pick(this.metrics, targets);\n    for (let idx = 0, time = from; time < to;\n         idx += 1, time += Math.ceil(stepInSeconds)) {\n      for (let metric in series) {\n        series[metric].values[idx] = [series[metric].calc(time), time];\n      }\n      this.cleanCachedPositions();\n    }\n\n    var targetSeries = [];\n    for (let metric in series) {\n      targetSeries.push({\"target\": series[metric].text,\n                         \"datapoints\": series[metric].values});\n    }\n    return {\"data\": targetSeries};\n  }\n\n  testDatasource() {\n    var res = {};\n    if (this.position.latitude < -90 || this.position.latitude > 90) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Latitude not in range -+90.\"};\n    } else if (this.position.longitude < -360 ||\n               this.position.longitude > 360) {\n      res = {\"status\": \"error\", title: \"Error\",\n             message: \"Longitude not in range -+360.\"};\n    } else {\n      res = {\"status\": \"success\", title: \"Success\",\n             message: \"Datasource added successfully.\"};\n    }\n    return this.q.when(res);\n  }\n\n  metricFindQuery() {\n    var targets = _.keys(this.metrics);\n    return this.q.when(targets.map(function (i) { return {text: i}; }));\n  }\n}\n"]}